{% set name = "geometric_features" %}
{% set version = "0.1.9" %}
{% set build = 0 %}

{% if with_data != "True" %}
# prioritize no data via build number
{% set build = build + 100 %}
{% endif %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  path: ..

build:
  number: {{ build }}
  noarch: python

  {% if with_data == "True" %}
  {% set data_prefix = "with_data" %}
  {% else %}
  {% set data_prefix = "no_data" %}
  {% endif %}
  # add build string so packages can depend on
  # with_data or no_data variants
  # dependencies:
  # `PKG_NAME * no_data*` for no geometric data included
  # `PKG_NAME * with_data*` for all geometric data included
  string: "{{ data_prefix }}_py_h{{ PKG_HASH }}_{{ build }}"

  entry_points:
    - combine_features = geometric_features.__main__:combine_features
    - difference_features = geometric_features.__main__:difference_features
    - fix_features_at_antimeridian = geometric_features.__main__:fix_features_at_antimeridian
    - merge_features = geometric_features.__main__:merge_features
    - plot_features = geometric_features.__main__:plot_features
    - set_group_name = geometric_features.__main__:set_group_name
    - simplify_features = geometric_features.__main__:simplify_features
    - split_features = geometric_features.__main__:split_features
    - tag_features = geometric_features.__main__:tag_features

requirements:
  host:
    - python
    - pip
  run:
    - python
    - numpy
    - matplotlib-base
    - cartopy
    - shapely
    - requests
    - progressbar2

test:
  requires:
    - pytest
  imports:
    - geometric_features
    - pytest
  commands:
    - pytest --pyargs geometric_features
    - combine_features -v
    - difference_features -v
    - fix_features_at_antimeridian -v
    - merge_features -v
    - plot_features -v
    - set_group_name -v
    - simplify_features -v
    - split_features -v
    - tag_features -v

about:
  home: https://github.com/MPAS-Dev/geometric_features
  license: BSD 3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: 'Tools for manipulating collections of geojson geometric features'
  description: |
    Tools for manipulating regions, transects, and points in geojson format
    for use in initializing climate models and analyzing their output.
  doc_url: https://github.com/MPAS-Dev/geometric_features/README.md
  dev_url: https://github.com/MPAS-Dev/geometric_features

extra:
  recipe-maintainers:
    - xylar
