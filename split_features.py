#!/usr/bin/env python

"""

This script takes a file containing one or more feature definitions, that is
pointed to by the -f flag. It then writes each feature defition out to it's own
independent file in an autogenerated directory tree.

Authors: Douglas Jacobsen, Xylar Asay-Davis
Last Modified: 9/29/2016

"""

import os
import json
import argparse
from utils.feature_write_utils import write_all_features

parser = argparse.ArgumentParser(description=__doc__, formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("-f", "--features_file", dest="features_file", help="File containing features to split up", metavar="FILE", required=True)

args = parser.parse_args()

if args.features_file:
    if not os.path.exists(args.features_file):
        parser.error('The file %s does not exist.'%(args.features_file))

with open(args.features_file) as f:
    features_file = json.load(f)


for feature in features_file['features']:
    feature_name = feature['properties']['name']
    component = feature['properties']['component']
    object_type = feature['properties']['object']

    dir_name = feature_name.strip().replace(' ','_').strip('\'').strip('.',)

    if not os.path.exists('%s/%s/%s'%(component, object_type, dir_name)):
        os.makedirs('%s/%s/%s'%(component, object_type, dir_name))

    out_file_name = '%s/%s/%s/%s.geojson'%(component, object_type, dir_name, object_type)

    write_all_features({'features':[feature]}, out_file_name, indent=4)

# vim: foldmethod=marker ai ts=4 sts=4 et sw=4 ft=python
